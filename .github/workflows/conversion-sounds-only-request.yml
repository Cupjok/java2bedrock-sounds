name: Sounds Only Conversion Request
on:
  issues:
    types:
      - labeled

jobs:
  get-pack-info:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'sounds-only'
    permissions:
      issues: read
    timeout-minutes: 2
    outputs:
      pack_url: ${{ steps.organize-inputs.outputs.PACK_URL }}
    steps:
      - name: Issue Forms Body Parser
        id: parse-issue
        uses: zentered/issue-forms-body-parser@v1.5.1
      - name: Organize Inputs
        id: organize-inputs
        run: |
          echo ${{ toJSON(steps.parse-issue.outputs.data) }} | jq '
          def test_input($input; $default):
          if ($input == "*No response*" or $input == "None") then $default else ($input | tostring | gsub("\\\\";"")) end;
          {
            "pack_url": test_input(.["java-pack-url"].text; "null")[1:-1]
          }' > inputs.json
          echo "PACK_URL=$(jq -r '.pack_url' inputs.json)" >> $GITHUB_OUTPUT

  convert-pack:
    runs-on: ubuntu-latest
    needs: get-pack-info
    permissions:
      contents: read
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          # We only need these for the sounds-only script
          sudo apt-get update
          sudo apt-get install -y --fix-missing moreutils zip ffmpeg
      - name: Convert Pack
        id: convert-pack
        env: 
          PACK_URL: ${{ needs.get-pack-info.outputs.pack_url }}
        run: |
          mkdir -p staging
          cp converter_sounds_only.sh staging/
          cd staging
          chmod +x converter_sounds_only.sh
          
          echo "Downloading pack from: ${PACK_URL}"
          curl --no-styled-output -#L -o input_pack.zip "${PACK_URL}"
          
          # Run the script with only the required input file
          ./converter_sounds_only.sh input_pack.zip

      - name: Upload converted pack
        uses: actions/upload-artifact@v4
        with:
          name: Sound-Pack-Files # Renamed for clarity
          path: |
            # Only upload the files that are actually created
            staging/target/packaged/sounds_only.mcpack
            staging/logs.zip

  post-result:
    runs-on: ubuntu-latest
    needs: convert-pack
    if: success() # More explicit condition
    timeout-minutes: 2
    permissions: 
      issues: write
    steps:
      - name: Post Result
        id: post-result
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## :musical_note: Sound conversion complete! :musical_note:
            - Download your pack files from the [action run][1] page. :arrow_double_down:
            
            [1]: https://github.com/Cupjok/java2bedrock-sounds/actions/runs/${{ github.run_id}}
          reactions: 'hooray'
      - name: Close Issue
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}

  conversion-failed:
    runs-on: ubuntu-latest
    needs: [get-pack-info, convert-pack]
    if: failure() || cancelled() # More explicit condition
    timeout-minutes: 2
    permissions: 
      issues: write
    steps:
      - name: Post Result
        id: post-result
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## :warning: Sound conversion failed :warning:
            - Please check the logs from the [action run][1] page for errors.
            - Status by job:
              - Get Pack Info: *${{ needs.get-pack-info.result }}*
              - Convert Pack: *${{ needs.convert-pack.result }}*

            [1]: https://github.com/Cupjok/java2bedrock-sounds/actions/runs/${{ github.run_id}}
          reactions: 'confused'
      - name: Close Issue
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
